---
import { getI18n } from "src/i18n/i18n";
import type { EndpointRelation } from "src/shared/payload/endpoint-types";

interface Props {
  relation: EndpointRelation;
}

const { relation } = Astro.props;
const { formatEndpointRelation } = await getI18n(Astro.locals.currentLocale);

const {
  href,
  typeLabel,
  label,
  target = undefined,
  rel = undefined,
  lang,
} = formatEndpointRelation(relation);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<a href={href} target={target} rel={rel}>
  <p>
    <span id="type" class="font-xs">{typeLabel}</span><span id="label" lang={lang}>{label}</span>
  </p>
</a>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  a {
    border-radius: 16px;
    padding: 4px 10px;
    margin: -4px -10px;

    & > p {
      display: flex;
      place-items: start;
      gap: 0.1em 0.3em;

      & > #label {
        text-decoration: underline dotted 0.1em;
        text-decoration-color: transparent;

        transition-duration: 150ms;
        transition-property: text-decoration-color, color;

        line-height: 1.2;
      }

      & > #type {
        background-color: var(--color-base-300);
        border-radius: 9999px;
        padding: 0.3em 0.6em;
        flex-shrink: 0;
        margin-left: -0.5em;
      }
    }

    &:hover > p > #label,
    &:focus-visible > p > #label {
      color: var(--color-base-750);
      text-decoration-color: var(--color-base-650);
    }

    &:focus-visible {
      outline-width: 1.5 px;
    }

    &:active > p > #label {
      color: var(--color-base-650);
      text-decoration-color: var(--color-base-550);
    }
  }
</style>
