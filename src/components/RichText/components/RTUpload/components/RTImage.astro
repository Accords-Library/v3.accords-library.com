---
import { type RichTextUploadImageNode } from "src/shared/payload/payload-sdk";
import type { RichTextContext } from "src/utils/richText";
import OpenMediaPageButton from "./OpenMediaPageButton.astro";
import { getI18n } from "src/i18n/i18n";
import HeaderTitle from "components/HeaderTitle.astro";
import { Icon } from "astro-icon/components";

interface Props {
  node: RichTextUploadImageNode;
  context: RichTextContext;
}

const {
  node: {
    value: { id, url, translations },
  },
  context,
} = Astro.props;

const { getLocalizedMatch, getLocalizedUrl } = await getI18n(Astro.locals.currentLocale);
const { title }: { title?: string } =
  translations.length > 0 ? getLocalizedMatch(translations) : {};

const mediaPage = getLocalizedUrl(`/images/${id}`);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<div>
  {
    title && (
      <HeaderTitle header={context.depth + 2}>
        <Icon name="material-symbols:imagesmode" />
        {title}
      </HeaderTitle>
    )
  }
  <a href={mediaPage}><img src={url} /></a>
  <OpenMediaPageButton url={mediaPage} />
</div>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  div {
    margin-block: 4em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;

    & > a > img {
      width: 100%;
      height: auto;
      border-radius: 16px;
      box-shadow: 0 5px 20px -10px var(--color-shadow);
      margin-bottom: -0.5em;
    }
  }
</style>
