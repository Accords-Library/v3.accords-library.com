---
import type { RichTextContext } from "src/utils/richText";
import { getI18n } from "src/i18n/i18n";
import HeaderTitle from "components/HeaderTitle.astro";
import { Icon } from "astro-icon/components";
import { sizesToSrcset } from "src/utils/img";
import type { RichTextUploadImageNode } from "src/shared/payload/rich-text";

interface Props {
  node: RichTextUploadImageNode;
  context: RichTextContext;
}

const {
  node: {
    value: { id, url, width, height, translations, sizes },
  },
  context,
} = Astro.props;

const { getLocalizedMatch, getLocalizedUrl } = await getI18n(Astro.locals.currentLocale);
const { title }: { title?: string } =
  translations.length > 0 ? getLocalizedMatch(translations) : {};

const mediaPage = getLocalizedUrl(`/images/${id}`);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<div>
  {
    title && (
      <HeaderTitle header={context.depth + 2} lang={context.lang}>
        <Icon name="material-symbols:imagesmode" />
        {title}
      </HeaderTitle>
    )
  }
  <a href={mediaPage} style=`aspect-ratio: ${width}/${height};`>
    <img
      src={url}
      srcset={sizesToSrcset(sizes)}
      sizes={`(max-width: 550px) 90vw, 550px`}
      width={width}
      height={height}
      loading="lazy"
    />
  </a>
</div>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  div {
    margin-block: 4em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
  }

  a {
    line-height: 0;
    border-radius: 16px;
    box-shadow: 0 5px 20px -10px var(--color-shadow-0);
    border-radius: 16px;
    overflow: hidden;

    transition-property: scale, margin-bottom;
    transition-duration: 100ms;

    &:hover,
    &:focus-visible {
      scale: 102%;
    }

    max-height: 70vh;
  }
</style>
