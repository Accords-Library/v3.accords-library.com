---
import type { RichTextContext } from "src/utils/richText";
import RTNode from "../RTNode.astro";
import RTCustomLink from "./components/RTCustomLink.astro";
import RTInternalLink from "./components/RTInternalLink.astro";
import ErrorMessage from "components/ErrorMessage.astro";
import {
  isLinkNodeCustomLinkNode,
  isLinkNodeInternalLinkNode,
  type RichTextLinkNode,
} from "src/shared/payload/rich-text";

interface Props {
  node: RichTextLinkNode;
  context: RichTextContext;
}

const { node, context } = Astro.props;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

{
  isLinkNodeCustomLinkNode(node) ? (
    <RTCustomLink href={node.fields.url} newTab={node.fields.newTab}>
      {node.children.map((node) => (
        <RTNode node={node} context={context} />
      ))}
    </RTCustomLink>
  ) : isLinkNodeInternalLinkNode(node) ? (
    <RTInternalLink doc={node.fields.doc}>
      {node.children.map((node) => (
        <RTNode node={node} context={context} />
      ))}
    </RTInternalLink>
  ) : (
    <ErrorMessage title={`Unknown link type: ${node.fields.linkType}`} />
  )
}
