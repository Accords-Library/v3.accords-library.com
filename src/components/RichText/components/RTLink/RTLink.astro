---
import type { RichTextContext } from "src/utils/richText";
import RTNode from "../RTNode.astro";
import RTCustomLink from "./components/RTCustomLink.astro";
import RTInternalLink from "./components/RTInternalLink.astro";

interface Props {
  node: {
    type: string;
    children: {
      type: string;
      version: number;
      [k: string]: unknown;
    }[];
    version: number;
    fields: {
      linkType: "internal" | "custom";
      doc: any;
      url: string;
      newTab: boolean;
    };
    [k: string]: unknown;
  };
  context: RichTextContext;
}

const { node, context } = Astro.props;
---

{
  node.fields.linkType === "custom" ? (
    <RTCustomLink href={node.fields.url} newTab={node.fields.newTab}>
      {node.children.map((node) => (
        <RTNode node={node} context={context} />
      ))}
    </RTCustomLink>
  ) : node.fields.linkType === "internal" ? (
    <RTInternalLink doc={node.fields.doc}>
      {node.children.map((node) => (
        <RTNode node={node} context={context} />
      ))}
    </RTInternalLink>
  ) : (
    <p>{`Unknown link type: ${node.fields.linkType}. Please contact website technical administrator.`}</p>
  )
}
