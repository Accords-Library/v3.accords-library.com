---
import RTParagraph from "./RTParagraph.astro";
import RTList from "./RTList/RTList.astro";
import RTText from "./RTText/RTText.astro";
import RTLink from "./RTLink/RTLink.astro";
import RTBlock from "./RTBlock/RTBlock.astro";
import type { RichTextContext } from "src/utils/richText";
import {
  isNodeBlockNode,
  isNodeLinebreakNode,
  isNodeLinkNode,
  isNodeListNode,
  isNodeParagraphNode,
  isNodeTabNode,
  isNodeTextNode,
  isNodeUploadNode,
  type RichTextNode,
} from "src/shared/payload/payload-sdk";
import RTTab from "./RTTab.astro";
import ErrorMessage from "components/ErrorMessage.astro";
import RTLinebreak from "./RTLinebreak.astro";
import RTUpload from "./RTUpload/RTUpload.astro";

interface Props {
  node: RichTextNode;
  context: RichTextContext;
}

const { node, context } = Astro.props;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

{
  isNodeParagraphNode(node) ? (
    <RTParagraph node={node} context={context} />
  ) : isNodeListNode(node) ? (
    <RTList node={node} context={context} />
  ) : isNodeTextNode(node) ? (
    <RTText node={node} context={context} />
  ) : isNodeLinebreakNode(node) ? (
    <RTLinebreak node={node} context={context} />
  ) : isNodeLinkNode(node) ? (
    <RTLink node={node} context={context} />
  ) : isNodeBlockNode(node) ? (
    <RTBlock node={node} context={context} />
  ) : isNodeTabNode(node) ? (
    <RTTab />
  ) : isNodeUploadNode(node) ? (
    <RTUpload node={node} context={context} />
  ) : (
    <ErrorMessage
      title={`Unknown node type: ${node.type}`}
      description="Please contact website technical administrator."
    />
  )
}
