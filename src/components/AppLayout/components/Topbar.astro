---
import { Icon } from "astro-icon/components";
import Button from "components/Button.astro";
import ThemeSelector from "components/AppLayout/components/ThemeSelector.astro";
import LanguageSelector from "components/AppLayout/components/LanguageSelector.astro";
import CurrencySelector from "components/AppLayout/components/CurrencySelector.astro";
import { getI18n } from "translations/translations";
import Tooltip from "components/Tooltip.astro";

interface Props {
  parentPages?: { name: string; slug: string; type: string }[] | undefined;
  hideHomeButton?: boolean;
}

const { parentPages = [], hideHomeButton = false } = Astro.props;

const { t, getLocalizedUrl } = await getI18n(Astro.locals.currentLocale);
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<nav id="topbar" class="when-no-print">
  {
    (!hideHomeButton || parentPages.length > 0) && (
      <div id="breadcrumb" class="hide-scrollbar high-contrast-text">
        <a href="/">
          <Icon name="material-symbols:home" width={16} height={16} />
          <p>{t("home.title")}</p>
        </a>

        {parentPages.length > 0 && (
          <Tooltip trigger="click">
            <div slot="tooltip-content">
              <p>This content is part of these pages:</p>
              <p>NieR / Concert</p>
              <p>NieR:Automata / Concert</p>
              <p>NieR:Theatrical Orchestra Concert 12020 Bluray</p>
            </div>
            <div>
              <Icon name="material-symbols:keyboard-return" />
              <p>4 parent pages</p>
            </div>
          </Tooltip>
        )}
      </div>
    )
  }

  <div id="toolbar">
    <a href={getLocalizedUrl("/search")}>
      <Button
        icon="material-symbols:search"
        ariaLabel={t("header.topbar.search.tooltip")}
      />
    </a>
    <div class="separator"></div>

    <div class="when-no-js">
      <a href="/settings">
        <Button
          icon="material-symbols:settings-outline"
          ariaLabel={t("header.topbar.search.tooltip")}
        />
      </a>
    </div>

    <div class="when-js">
      <ThemeSelector />

      <LanguageSelector class="m-not" withTitle />
      <LanguageSelector class="m-only" />

      <CurrencySelector class="m-not" withTitle />
      <CurrencySelector class="m-only" />
    </div>
  </div>
</nav>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  nav {
    display: flex;
    align-items: center;
    flex-wrap: wrap-reverse;
    gap: 32px 64px;

    & > #breadcrumb {
      display: flex;
      place-items: center;
      overflow-x: scroll;
      gap: 8px;
      margin-left: -0.8em;

      & > svg {
        flex-shrink: 0;
      }

      & > a,
      & > :global(tippy-tooltip > div) {
        text-decoration: none;
        flex-shrink: 0;
        display: flex;
        place-items: center;
        gap: 0.4em;
        padding: 0.7em 0.8em;
        border-radius: 9999px;
        cursor: pointer;

        backdrop-filter: blur(10px);

        transition: 150ms background-color;

        &:hover {
          background-color: var(--color-base-250);
        }

        &:active {
          background-color: var(--color-base-300);
        }
      }
    }

    & > #toolbar {
      flex-grow: 1;
      display: flex;
      gap: 12px;
      place-items: center;
      justify-content: flex-end;

      @media (max-width: 28rem) {
        justify-content: center;
      }

      @media (max-width: 22rem) {
        justify-content: space-between;
        gap: 0;
      }

      & > .separator {
        width: 1px;
        height: 2em;
        background-color: var(--color-base-700);

        @media (max-width: 20rem) {
          display: none;
        }
      }

      & > div.when-js {
        display: flex;
        gap: 12px;

        & > :global(.m-only) {
          display: none;
        }

        @media (max-width: 40rem) {
          & > :global(.m-only) {
            display: flex;
          }

          & > :global(.m-not) {
            display: none;
          }
        }
      }
    }
  }
</style>

<script is:inline>
  const breadcrumbElem = document.querySelector("nav#topbar > #breadcrumb");
  breadcrumbElem?.scrollTo({
    left: breadcrumbElem.scrollWidth,
    behavior: "instant",
  });
</script>
