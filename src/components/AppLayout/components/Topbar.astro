---
import { Icon } from "astro-icon/components";
import Button from "components/Button.astro";
import ButtonGroup from "components/ButtonGroup.astro";
import Tooltip from "pages/_components/Tooltip.astro";
import astroConfig from "astro.config";

interface Props {
  breadcrumb: { name: string; slug: string }[];
}

const { breadcrumb } = Astro.props;
const currentLocate = Astro.currentLocale ?? "en";
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<nav id="topbar">
  <div id="breadcrumb" class="hide-scrollbar">
    {
      breadcrumb.length > 0 && (
        <>
          <a href="/">
            <>
              <Icon name="accords" width={16} height={16} />
              <p>Home</p>
            </>
          </a>
          {breadcrumb.map(({ name, slug }) => (
            <>
              <Icon
                name="material-symbols:arrow-forward-ios"
                width={12}
                height={12}
              />
              <a href={slug}>
                <p>{name}</p>
              </a>
            </>
          ))}
        </>
      )
    }
  </div>
  <div id="toolbar">
    <Button icon="material-symbols:search" ariaLabel="Search on this website" />
    <div class="separator"></div>
    <Tooltip class="xs-not">
      <Fragment slot="tooltip-content">
        <a href="?action-theme=dark">Dark</a>
        <a href="?action-theme=auto">Auto</a>
        <a href="?action-theme=light">Light</a>
      </Fragment>
      <Button
        icon="material-symbols:sunny-outline"
        ariaLabel="Switch between dark/light mode"
      />
    </Tooltip>

    <ButtonGroup
      buttons={[
        {
          icon: "material-symbols:text-decrease",
          ariaLabel: "Decrease text size",
          href: "?action-fontsize-increase=1",
        },
        {
          icon: "material-symbols:text-increase",
          ariaLabel: "Increase text size",
          href: "?action-fontsize-decrease=1",
        },
      ]}
    />
    <Button
      class="s-only"
      icon={[
        "material-symbols:translate",
        "material-symbols:currency-exchange",
      ]}
      ariaLabel="Select preferred language/currency"
    />
    <Button
      class="m-only s-not"
      icon="material-symbols:translate"
      ariaLabel="Select preferred language"
    />
    <Button
      class="m-only s-not"
      icon="material-symbols:currency-exchange"
      ariaLabel="Select preferred currency"
    />
    <Tooltip class="m-not">
      <Fragment slot="tooltip-content">
        {
          astroConfig.i18n?.locales.map((locale) => (
            <a href={`?action-lang=${locale}`}>
              {locale.toString().toUpperCase()}
            </a>
          ))
        }
      </Fragment>
      <Button
        icon="material-symbols:translate"
        title={currentLocate.toUpperCase()}
        ariaLabel="Select preferred language"
      />
    </Tooltip>
    <Button
      class="m-not"
      icon="material-symbols:currency-exchange"
      title="USD"
      ariaLabel="Select preferred currency"
    />
  </div>
</nav>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  nav {
    display: flex;
    align-items: center;
    flex-wrap: wrap-reverse;
    gap: 32px 64px;

    & > #breadcrumb {
      display: flex;
      place-items: center;
      overflow-x: scroll;

      & > svg {
        flex-shrink: 0;
      }

      & > a {
        text-decoration: none;
        flex-shrink: 0;
        display: flex;
        place-items: center;
        gap: 0.4em;
        padding: 0.4em 0.6em;
        border-radius: 9999px;

        transition: 150ms background-color;

        &:hover {
          background-color: var(--color-base-250);
        }

        &:active {
          background-color: var(--color-base-300);
        }

        &:last-child {
          text-decoration: underline;
        }
      }
    }

    & > #toolbar {
      flex-grow: 1;
      display: flex;
      gap: clamp(4px, 4px + 1vw, 12px);
      place-items: center;
      justify-content: flex-end;

      @media (max-width: 28rem) {
        justify-content: center;
      }

      @media (max-width: 22rem) {
        justify-content: space-between;
        gap: 0;
      }

      & > .separator {
        width: 1px;
        height: 2em;
        background-color: var(--color-base-700);

        @media (max-width: 30rem) {
          display: none;
        }
      }

      & > :global(.m-only),
      & > :global(.s-only) {
        display: none;
      }

      @media (max-width: 40rem) {
        & > :global(.m-only) {
          display: flex;
        }

        & > :global(.m-not) {
          display: none;
        }

        @media (max-width: 28rem) {
          & > :global(.s-only) {
            display: flex;
          }

          & > :global(.s-not) {
            display: none;
          }
        }

        @media (max-width: 25rem) {
          & > :global(.xs-not) {
            display: none;
          }
        }
      }
    }
  }
</style>

<script is:inline>
  const breadcrumbElem = document.querySelector("nav#topbar > #breadcrumb");
  breadcrumbElem.scrollTo({
    left: breadcrumbElem.scrollWidth,
    behavior: "instant",
  });
</script>
