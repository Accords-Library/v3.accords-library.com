---
import Tooltip from "components/Tooltip.astro";
import { Icon } from "astro-icon/components";
import { getI18n } from "src/i18n/i18n";
import ReturnToButton from "./ReturnToButton.astro";
import RelationRow from "components/RelationRow.astro";
import type { EndpointRelation } from "src/shared/payload/endpoint-types";

interface Props {
  relations: EndpointRelation[];
  relationPageUrl?: string | undefined;
}

const { relations, relationPageUrl } = Astro.props;

const { t } = await getI18n(Astro.locals.currentLocale);

const buttonLabel = t("header.nav.parentPages.label", {
  count: relations.length,
});
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

{
  relations.length === 1 && relations[0] ? (
    <ReturnToButton relation={relations[0]} />
  ) : (
    <>
      <Tooltip trigger="click" class="when-js">
        <div id="tooltip-content" slot="tooltip-content">
          <p>{t("header.nav.parentPages.tooltip")}</p>
          <div>
            {relations.slice(0, 5).map((relation) => (
              <RelationRow relation={relation} />
            ))}
            {relationPageUrl && (
              <>
                <hr />
                <a href={relationPageUrl} class="pressable-link">
                  {t("header.nav.parentPages.tooltip.viewAll")}
                </a>
              </>
            )}
          </div>
        </div>
        <div class="pressable-label">
          <Icon name="material-symbols:keyboard-return" />
          <p>{buttonLabel}</p>
        </div>
      </Tooltip>
      {relationPageUrl && (
        <a class="pressable-label when-no-js" href={relationPageUrl}>
          <Icon name="material-symbols:keyboard-return" />
          <div>{buttonLabel}</div>
        </a>
      )}
    </>
  )
}

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  #tooltip-content {
    > p {
      margin-bottom: 1em;
    }

    > div {
      display: flex;
      flex-direction: column;
      gap: 0.8em;

      & > hr {
        border: none;
        border-top: 2px dotted var(--color-base-500);
        margin-top: 8px;
      }

      & > .pressable-link {
        padding: 4px 10px;
        margin: -4px -10px;
      }
    }
  }
</style>
