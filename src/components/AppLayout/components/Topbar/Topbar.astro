---
import { Icon } from "astro-icon/components";
import Button from "components/Button.astro";
import ThemeSelector from "./components/ThemeSelector.astro";
import LanguageSelector from "./components/LanguageSelector.astro";
import CurrencySelector from "./components/CurrencySelector.astro";
import RelationsButton from "./components/RelationsButton.astro";
import { getI18n } from "src/i18n/i18n";
import type { EndpointRelation } from "src/shared/payload/endpoint-types";

interface Props {
  relations?: EndpointRelation[] | undefined;
  relationPageUrl?: string | undefined;
  hideHomeButton?: boolean | undefined;
  hideSearchButton?: boolean | undefined;
}

const {
  relations = [],
  relationPageUrl,
  hideHomeButton = false,
  hideSearchButton = false,
} = Astro.props;

const { t, getLocalizedUrl } = await getI18n(Astro.locals.currentLocale);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<nav id="topbar" class="when-no-print">
  {
    (!hideHomeButton || relations.length > 0) && (
      <div id="left" class="hide-scrollbar">
        <a href={getLocalizedUrl("")} class="pressable-label">
          <Icon name="material-symbols:home" width={16} height={16} />
          <p>{t("home.title")}</p>
        </a>

        {relations.length > 0 && (
          <RelationsButton relations={relations} relationPageUrl={relationPageUrl} />
        )}
      </div>
    )
  }

  <div id="toolbar" class="hide-scrollbar">
    {
      !hideSearchButton && (
        <>
          <a href={getLocalizedUrl("/search")} title={t("header.topbar.search.tooltip")}>
            <Button icon="material-symbols:search" />
          </a>
          <div class="separator" />
        </>
      )
    }

    <div class="when-no-js">
      <a href="/settings">
        <Button
          icon="material-symbols:settings-outline"
          ariaLabel={t("header.topbar.settings.tooltip")}
        />
      </a>
    </div>

    <div class="when-js">
      <ThemeSelector />

      <LanguageSelector class="m-not" withTitle />
      <LanguageSelector class="m-only" />

      <CurrencySelector class="m-not" withTitle />
      <CurrencySelector class="m-only" />
    </div>
  </div>
</nav>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  nav {
    display: flex;
    align-items: center;
    flex-wrap: wrap-reverse;
    gap: 32px 64px;

    & > #left {
      display: flex;
      place-items: center;
      overflow-x: scroll;
      padding: 3px; /* This way focus outline isn't cropped by overflow-x */
      gap: 8px;
      margin-left: -0.8em;
    }

    & > #toolbar {
      flex-grow: 1;
      display: flex;
      gap: 12px;
      place-items: center;
      justify-content: flex-end;
      overflow-x: scroll;
      padding: 3px; /* This way focus outline isn't cropped by overflow-x */

      @media (max-width: 28rem) {
        justify-content: center;
      }

      & > .separator {
        width: 1px;
        height: 2em;
        background-color: var(--color-base-700);

        @media (max-width: 20rem) {
          display: none;
        }
      }

      & > div.when-js {
        display: flex;
        gap: 12px;

        & > .m-only {
          display: none;
        }

        @media (max-width: 40rem) {
          & > .m-only {
            display: flex;
          }

          & > .m-not {
            display: none;
          }
        }
      }
    }
  }
</style>
