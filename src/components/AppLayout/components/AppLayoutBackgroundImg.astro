---
import type {
  EndpointImage,
  EndpointMediaThumbnail,
  EndpointScanImage,
} from "src/shared/payload/payload-sdk";
import { getRandomId } from "src/utils/random";
import { sizesToSrcset } from "src/utils/img";

interface Props {
  img: EndpointImage | EndpointMediaThumbnail | EndpointScanImage;
}

const {
  img: { url, width, height, sizes },
} = Astro.props;

const uniqueId = getRandomId();

const style = `
@media (max-aspect-ratio: ${width}/${height * 0.85}) {
  #${uniqueId} {
      mask-image: linear-gradient( to bottom, rgba(0 0 0 / 30%) 0%, transparent 100% );
  }
}
`;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<img
  id={uniqueId}
  src={url}
  srcset={sizesToSrcset(sizes)}
  sizes="100vw"
  width={width}
  height={height}
  class="when-no-print when-js"
/>
<img
  id={uniqueId}
  src={url}
  srcset={sizesToSrcset(sizes)}
  sizes="100vw"
  width={width}
  height={height}
  class="when-no-print when-no-js"
/>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style set:html={style} is:inline></style>

<style>
  img {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    width: 100%;
    height: auto;
    max-height: 100%;

    object-fit: cover;
    object-position: 50% 0;

    z-index: -1;

    mask-image: linear-gradient(
      to bottom,
      rgba(0 0 0 / 30%) 0%,
      rgba(0 0 0 / 5%) 100vh,
      rgba(0 0 0 / 5%) 80%,
      transparent 100%
    );

    user-select: none;

    &.when-js {
      opacity: 0;
      transition: 3s opacity;
    }
  }
</style>

{/* ------------------------------------------- JS --------------------------------------------- */}

<script define:vars={{ uniqueId }} is:inline>
  const element = document.getElementById(uniqueId);

  element.addEventListener("load", () => {
    element.style.opacity = 1;
  });
</script>
