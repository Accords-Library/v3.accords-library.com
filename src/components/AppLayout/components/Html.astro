---
import UAParser from "ua-parser-js";
import { ViewTransitions } from "astro:transitions";
import "@fontsource-variable/vollkorn";
import "@fontsource-variable/murecho";
import { getI18n } from "src/i18n/i18n";
import AppLayoutSpinner from "./AppLayoutSpinner.astro";

interface Props {
  openGraph?:
    | {
        title?: string | undefined;
        description?: string | undefined;
        thumbnail?: string | undefined;
        audio?: string | undefined;
        video?: string | undefined;
      }
    | undefined;
}

const { currentLocale } = Astro.locals;
const { t } = await getI18n(currentLocale);

const { openGraph = {} } = Astro.props;
const {
  description = t("global.meta.description"),
  thumbnail = "/img/default_og.jpg",
  audio,
  video,
} = openGraph;

const title = openGraph.title
  ? `${t("global.siteName")} â€“ ${openGraph.title}`
  : t("global.siteName");

const userAgent = Astro.request.headers.get("user-agent") ?? "";
const parser = new UAParser(userAgent);
const isIOS = parser.getOS().name === "iOS";

const { currentTheme } = Astro.locals;

/* Keep that separator here or else it breaks the HTML 
----------------------------------------------- HTML -------------------------------------------- */
---

<html
  lang={currentLocale}
  class:list={{
    "manual-theme": currentTheme !== "auto",
    "light-theme": currentTheme === "light",
    "dark-theme": currentTheme === "dark",
    "texture-dots": !isIOS,
  }}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="stylesheet" href="/css/tippy.css" />
    <meta name="theme-color" media="(prefers-color-scheme: light)" content="#fdebd4" />
    <meta name="theme-color" media="(prefers-color-scheme: dark)" content="#27231e" />
    <link rel="manifest" href="/site.webmanifest" />

    {/* Meta & OpenGraph */}
    <title>{title}</title>

    <meta name="description" content={description} />

    <meta name="twitter:site" content="@AccordsLibrary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={thumbnail} />

    <meta property="og:type" content={video ? "video.movie" : audio ? "music.song" : "website"} />
    <meta property="og:locale" content={currentLocale} />
    <meta property="og:site_name" content={t("global.siteName")} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />

    <meta property="og:image" content={thumbnail} />
    <meta property="og:image:secure_url" content={thumbnail} />
    <!-- <meta property="og:image:width" content={thumbnail.width.toString()} />
    <meta property="og:image:height" content={thumbnail.height.toString()} />
    <meta property="og:image:alt" content={thumbnail.alt} /> -->
    <meta property="og:image:type" content="image/jpeg" />

    {
      audio && (
        <>
          <meta property="og:audio" content={audio} />
          <meta property="og:audio:type" content="audio/mpeg" />
        </>
      )
    }
    {
      video && (
        <>
          <meta property="og:video" content={video} />
          <meta property="og:video:type" content="video/mp4" />
        </>
      )
    }

    <noscript>
      <style is:global>
        .when-js {
          display: none !important;
          visibility: none !important;
          opacity: 0 !important;
        }
      </style>
    </noscript>
    <ViewTransitions />
  </head>

  <body>
    <slot />
  </body>

  <AppLayoutSpinner />
</html>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style is:global>
  html {
    --color-base-0: #ffffff;
    --color-base-50: #fffaf3;
    --color-base-100: #fff4e6;
    --color-base-125: #fef0dd;
    --color-base-150: #fdebd4;
    --color-base-200: #f7ddc2;
    --color-base-250: #efcfb0;
    --color-base-300: #e5be9e;
    --color-base-350: #ddb08e;
    --color-base-400: #d3a07c;
    --color-base-450: #ca926c;
    --color-base-500: #c0835d;
    --color-base-550: #b3754f;
    --color-base-600: #a26a47;
    --color-base-650: #905e3f;
    --color-base-700: #805438;
    --color-base-750: #6e4a31;
    --color-base-800: #5e402b;
    --color-base-850: #4d3625;
    --color-base-900: #3c2d1e;
    --color-base-950: #2f2419;
    --color-base-1000: #1f1a13;

    --color-elevation-2: var(--color-base-50);
    --color-elevation-1: var(--color-base-125);
    --color-elevation-0: var(--color-base-150);

    --color-shadow: var(--color-base-500);
    --color-shadow-1: var(--color-base-350);
    --color-shadow-2: var(--color-base-300);

    --color-critical-error: #940000;

    --texture-dots: url(/img/paper-dots.webp);
    --texture-dots-blend: multiply;

    & .when-light-theme {
      display: initial !important;
    }

    & .when-dark-theme {
      display: none !important;
    }

    font-weight: 430;

    strong {
      font-weight: 600;
    }

    @media screen {
      &.dark-theme {
        --color-base-1000: #ebeae7;
        --color-base-950: #eae5e0;
        --color-base-900: #e8dfd8;
        --color-base-850: #e4d1c4;
        --color-base-800: #e0bfaa;
        --color-base-750: #dcb095;
        --color-base-700: #d4a07f;
        --color-base-650: #cb916c;
        --color-base-600: #bf835d;
        --color-base-550: #b07751;
        --color-base-500: #a06b48;
        --color-base-450: #8f5f40;
        --color-base-400: #7d5539;
        --color-base-350: #6b4a33;
        --color-base-300: #5c412e;
        --color-base-250: #4a3728;
        --color-base-200: #3a2d22;
        --color-base-175: #312820;
        --color-base-150: #27231e;
        --color-base-100: #1c1b16;
        --color-base-50: #11110d;
        --color-base-0: #000000;

        --color-elevation-2: var(--color-base-200);
        --color-elevation-1: var(--color-base-175);
        --color-elevation-0: var(--color-base-150);

        --color-shadow: var(--color-base-0);
        --color-shadow-1: var(--color-base-0);
        --color-shadow-2: var(--color-base-50);

        --color-critical-error: red;

        --texture-dots: url(/img/paper-dots-dark.webp);
        --texture-dots-blend: overlay;

        & .when-light-theme {
          display: none !important;
        }

        & .when-dark-theme {
          display: initial !important;
        }
      }

      &:not(.manual-theme) {
        @media (prefers-color-scheme: dark) {
          --color-base-1000: #ebeae7;
          --color-base-950: #eae5e0;
          --color-base-900: #e8dfd8;
          --color-base-850: #e4d1c4;
          --color-base-800: #e0bfaa;
          --color-base-750: #dcb095;
          --color-base-700: #d4a07f;
          --color-base-650: #cb916c;
          --color-base-600: #bf835d;
          --color-base-550: #b07751;
          --color-base-500: #a06b48;
          --color-base-450: #8f5f40;
          --color-base-400: #7d5539;
          --color-base-350: #6b4a33;
          --color-base-300: #5c412e;
          --color-base-250: #4a3728;
          --color-base-200: #3a2d22;
          --color-base-175: #312820;
          --color-base-150: #27231e;
          --color-base-100: #1c1b16;
          --color-base-50: #11110d;
          --color-base-0: #000000;

          --color-elevation-3: var(--color-base-150);
          --color-elevation-2: var(--color-base-200);
          --color-elevation-1: var(--color-base-175);
          --color-elevation-0: var(--color-base-150);

          --color-shadow: var(--color-base-0);
          --color-shadow-1: var(--color-base-0);
          --color-shadow-2: var(--color-base-50);

          --color-critical-error: red;

          --texture-dots: url(/img/paper-dots-dark.webp);
          --texture-dots-blend: overlay;

          & .when-light-theme {
            display: none !important;
          }

          & .when-dark-theme {
            display: initial !important;
          }
        }
      }
    }
  }

  /* THEMING */

  *::selection {
    color: var(--color-elevation-0);
    background: var(--color-base-600);
  }

  @media screen {
    .high-contrast-text {
      text-shadow: 0 0 0.6em var(--color-elevation-0);
    }

    body {
      margin: clamp(12px, 3vmin, 24px) clamp(24px, 4vw, 64px);
    }
  }

  html {
    position: relative;
    color: var(--color-base-1000);
    min-height: 100vb;
    display: flex;

    @media screen {
      background-color: var(--color-base-150);
    }
  }

  body {
    flex: 1;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    background-color: transparent;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  button,
  html {
    padding: 0;
    margin: 0;
  }

  h1,
  h2 {
    font-weight: 800;
  }

  .font-serif {
    font-family: "Vollkorn Variable", serif;
  }

  :root {
    --font-serif: "Vollkorn Variable", serif;
  }

  button {
    background-color: unset;
  }

  button,
  body {
    font-family: "Murecho Variable", sans-serif;
    line-height: 1;
  }

  a {
    color: unset;
    text-decoration: unset;
  }

  p {
    & a {
      transition-duration: 150ms;
      transition-property: text-decoration-color, color;

      color: var(--color-base-750);
      text-decoration: underline dotted 0.1em var(--color-base-650);

      &:hover {
        color: var(--color-base-850);
        text-decoration-color: var(--color-base-750);
      }

      &:active {
        color: var(--color-base-1000);
        text-decoration-color: var(--color-base-1000);
      }
    }
  }

  @media screen {
    .texture-dots {
      background-size: 10cm;
      background-attachment: local;
      background-image: var(--texture-dots);
      background-blend-mode: var(--texture-dots-blend);
      background-repeat: repeat;
    }
  }

  .pressable-icon {
    transition: 150ms color;
    cursor: pointer;

    &:hover {
      color: var(--color-base-700);
    }

    &:active {
      color: var(--color-base-550);
    }
  }

  .pressable-link {
    text-decoration: underline dotted 0.1em;
    text-decoration-color: transparent;

    transition-duration: 150ms;
    transition-property: text-decoration-color, color;

    &:hover {
      color: var(--color-base-750);
      text-decoration-color: var(--color-base-650);
    }

    &:active {
      color: var(--color-base-650);
      text-decoration-color: var(--color-base-550);
    }
  }

  .pressable-label {
    text-decoration: none;
    flex-shrink: 0;
    display: flex;
    place-items: center;
    gap: 0.4em;
    padding: 0.7em 0.8em;
    border-radius: 9999px;
    cursor: pointer;

    backdrop-filter: blur(10px);

    transition: 150ms background-color;

    &:hover {
      background-color: var(--color-base-250);
    }

    &:active {
      background-color: var(--color-base-300);
    }
  }

  .pressable {
    --foreground-color: var(--color-base-650);
    color: var(--foreground-color);
    border: 0.1rem solid var(--foreground-color);
    backdrop-filter: blur(10px);

    transition-duration: 250ms;
    transition-property: padding-top, box-shadow, background-color, color, border-color;

    &:hover {
      --foreground-color: var(--color-base-1000);
      box-shadow: 0 2px 2px var(--color-shadow-2);
      background-color: var(--color-elevation-1);
    }

    &:active {
      transition-duration: 75ms;
      --foreground-color: var(--color-base-1000);
      background-color: var(--color-elevation-2);
      box-shadow: 0 6px 12px 2px var(--color-shadow-2);
    }
  }

  .hide-scrollbar {
    scrollbar-width: none;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  .prose {
    font-size: 16px;
    line-height: 1.75;
    max-width: 35rem;

    > *:first-child {
      margin-top: unset;
      padding-top: unset;
    }

    > *:last-child {
      margin-bottom: unset;
      padding-bottom: unset;
    }

    > p {
      margin-top: 1.25em;
      margin-bottom: 1.25em;

      > kbd {
        background-color: var(--color-shadow-2);
        padding: 0.15em 0.3em;
        border-radius: 0.3em;
      }
    }

    > h2 {
      font-size: 32px;
    }

    > h3 {
      font-size: 24px;
    }

    > h2,
    > h3,
    > h4,
    > h5,
    > h6 {
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1;
      scroll-margin: 1em;
    }

    > h2 + h3,
    > h3 + h4,
    > h4 + h5,
    > h5 + h6 {
      margin-top: -0.75em;
    }
  }

  * {
    scrollbar-width: thin;
    scrollbar-color: var(--color-base-650) transparent;
  }

  @media print {
    .when-no-print {
      display: none !important;
    }
  }
</style>

{/* ------------------------------------------- JS --------------------------------------------- */}

<script is:inline>
  Array.from(document.querySelectorAll(".when-no-js")).forEach((node) => node.remove());

  document.addEventListener("astro:before-swap", ({ newDocument }) => {
    Array.from(newDocument.querySelectorAll(".when-no-js")).forEach((node) => node.remove());
  });
</script>
