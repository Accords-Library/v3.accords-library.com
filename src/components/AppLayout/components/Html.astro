---
import UAParser from "ua-parser-js";
import { getI18n } from "src/i18n/i18n";
import type {
  EndpointAudio,
  EndpointImage,
  EndpointPayloadImage,
  EndpointVideo,
} from "src/shared/payload/payload-sdk";
import { cache } from "src/utils/payload";

interface Props {
  openGraph?:
    | {
        title?: string | undefined;
        description?: string | undefined;
        thumbnail?: EndpointImage | EndpointPayloadImage | undefined;
        audio?: EndpointAudio | undefined;
        video?: EndpointVideo | undefined;
      }
    | undefined;
}

const { currentLocale } = Astro.locals;
const { t } = await getI18n(currentLocale);

const { openGraph = {} } = Astro.props;
const { description = t("global.meta.description"), audio, video } = openGraph;

const thumbnail =
  openGraph.thumbnail?.openGraph ?? openGraph.thumbnail ?? cache.config.defaultOpenGraphImage;

const title = openGraph.title
  ? `${openGraph.title} â€“ ${t("global.siteName")}`
  : t("global.siteName");

const userAgent = Astro.request.headers.get("user-agent") ?? "";
const parser = new UAParser(userAgent);
const isIOS = parser.getOS().name === "iOS";

const { currentTheme } = Astro.locals;

/* Keep that separator here or else it breaks the HTML 
----------------------------------------------- HTML -------------------------------------------- */
---

<html
  lang={currentLocale}
  class:list={{
    "manual-theme": currentTheme !== "auto",
    "light-theme": currentTheme === "light",
    "dark-theme": currentTheme === "dark",
    "texture-dots": !isIOS,
    "font-m": true,
    "debug-lang": false,
  }}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <link rel="stylesheet" href="/css/tippy.css" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href=`https://fonts.googleapis.com/css2\
?family=Noto+Sans:ital,wdth,wght@0,62.5..100,100..900;1,62.5..100,100..900\
&family=Noto+Sans+JP:wght@100..900\
&family=Noto+Sans+SC:wght@100..900\
&family=Noto+Serif:ital,wdth,wght@0,62.5..100,100..900;1,62.5..100,100..900\
&family=Noto+Serif+JP:wght@200..900\
&family=Noto+Serif+SC:wght@200..900\
&display=swap`
      rel="stylesheet"
    />

    <meta name="theme-color" media="(prefers-color-scheme: light)" content="#fdebd4" />
    <meta name="theme-color" media="(prefers-color-scheme: dark)" content="#27231e" />
    <link rel="manifest" href="/site.webmanifest" />

    {(openGraph.audio || openGraph.video) && <link rel="preconnect" href="https://resha.re" />}
    <link rel="preconnect" href="https://dashboard.accords-library.com" />

    {/* Meta & OpenGraph */}
    <title>{title}</title>

    <meta name="description" content={description} />

    <meta name="twitter:site" content="@AccordsLibrary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />

    <meta property="og:type" content={video ? "video.movie" : audio ? "music.song" : "website"} />
    <meta property="og:locale" content={currentLocale} />
    <meta property="og:site_name" content={t("global.siteName")} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />

    {
      thumbnail && (
        <>
          <meta name="twitter:card" content="summary_large_image" />
          <meta name="twitter:image" content={thumbnail.url} />

          <meta property="og:image" content={thumbnail.url} />
          <meta property="og:image:secure_url" content={thumbnail.url} />
          <meta property="og:image:width" content={thumbnail.width.toString()} />
          <meta property="og:image:height" content={thumbnail.height.toString()} />
          <meta property="og:image:type" content={thumbnail.mimeType} />
        </>
      )
    }

    {
      audio && (
        <>
          <meta property="og:audio" content={audio.url} />
          <meta property="og:audio:secure_url" content={audio.url} />
          <meta property="og:audio:type" content={audio.mimeType} />
        </>
      )
    }
    {
      video && (
        <>
          <meta property="og:video" content={video.url} />
          <meta property="og:video:secure_url" content={video.url} />
          <meta property="og:video:type" content={video.mimeType} />
        </>
      )
    }

    <noscript>
      <style is:global>
        .when-js {
          display: none !important;
          visibility: none !important;
          opacity: 0 !important;
        }
      </style>
    </noscript>
  </head>

  <body>
    <slot />
  </body>
</html>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style is:global>
  /* DEBUG */
  .debug-lang [lang] {
    outline: 5px solid red !important;
  }

  /* RESET */

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  button,
  body,
  html,
  hr {
    padding: 0;
    margin: 0;
    overflow-wrap: anywhere;
  }

  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit;
    font-size: inherit;
  }

  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
    height: auto;
  }

  a:has(> img) {
    display: block;
    width: fit-content;
  }

  button {
    background-color: initial;
    border: initial;
  }

  a {
    color: inherit;
    text-decoration: initial;
  }

  /* LIGHT/DARK THEME */

  html,
  .light-theme {
    --color-base-0: #ffffff;
    --color-base-50: #fffaf3;
    --color-base-100: #fff4e6;
    --color-base-125: #fef0dd;
    --color-base-150: #fdebd4;
    --color-base-200: #f7ddc2;
    --color-base-250: #efcfb0;
    --color-base-300: #e5be9e;
    --color-base-350: #ddb08e;
    --color-base-400: #d3a07c;
    --color-base-450: #ca926c;
    --color-base-500: #c0835d;
    --color-base-550: #b3754f;
    --color-base-600: #a26a47;
    --color-base-650: #905e3f;
    --color-base-700: #805438;
    --color-base-750: #6e4a31;
    --color-base-800: #5e402b;
    --color-base-850: #4d3625;
    --color-base-900: #3c2d1e;
    --color-base-950: #2f2419;
    --color-base-1000: #1f1a13;

    --color-elevation-2: var(--color-base-50);
    --color-elevation-1: var(--color-base-125);
    --color-elevation-0: var(--color-base-150);

    --color-shadow-0: var(--color-base-500);
    --color-shadow-1: var(--color-base-400);
    --color-shadow-2: var(--color-base-300);

    --color-critical-error: #940000;

    --texture-dots: url(/img/paper-dots.webp);
    --texture-dots-blend: multiply;

    * {
      color-scheme: only light;
    }

    color: var(--color-base-1000);
  }

  @media screen {
    .light-theme {
      & .when-dark-theme {
        display: none !important;
      }
    }

    .dark-theme {
      --color-base-1000: #ebeae7;
      --color-base-950: #eae5e0;
      --color-base-900: #e8dfd8;
      --color-base-850: #e4d1c4;
      --color-base-800: #e0bfaa;
      --color-base-750: #dcb095;
      --color-base-700: #d4a07f;
      --color-base-650: #cb916c;
      --color-base-600: #bf835d;
      --color-base-550: #b07751;
      --color-base-500: #a06b48;
      --color-base-450: #8f5f40;
      --color-base-400: #7d5539;
      --color-base-350: #6b4a33;
      --color-base-300: #5c412e;
      --color-base-250: #4a3728;
      --color-base-200: #3a2d22;
      --color-base-175: #312820;
      --color-base-150: #27231e;
      --color-base-100: #1c1b16;
      --color-base-50: #11110d;
      --color-base-0: #000000;

      --color-elevation-2: var(--color-base-200);
      --color-elevation-1: var(--color-base-175);
      --color-elevation-0: var(--color-base-150);

      --color-shadow-0: var(--color-base-0);
      --color-shadow-1: var(--color-base-50);
      --color-shadow-2: var(--color-base-100);

      --color-critical-error: red;

      --texture-dots: url(/img/paper-dots-dark.webp);
      --texture-dots-blend: overlay;

      & .when-light-theme {
        display: none !important;
      }

      * {
        color-scheme: only dark;
      }

      color: var(--color-base-1000);
    }

    html:not(.manual-theme) {
      @media (prefers-color-scheme: light) {
        & .when-dark-theme {
          display: none !important;
        }
      }

      @media (prefers-color-scheme: dark) {
        --color-base-1000: #ebeae7;
        --color-base-950: #eae5e0;
        --color-base-900: #e8dfd8;
        --color-base-850: #e4d1c4;
        --color-base-800: #e0bfaa;
        --color-base-750: #dcb095;
        --color-base-700: #d4a07f;
        --color-base-650: #cb916c;
        --color-base-600: #bf835d;
        --color-base-550: #b07751;
        --color-base-500: #a06b48;
        --color-base-450: #8f5f40;
        --color-base-400: #7d5539;
        --color-base-350: #6b4a33;
        --color-base-300: #5c412e;
        --color-base-250: #4a3728;
        --color-base-200: #3a2d22;
        --color-base-175: #312820;
        --color-base-150: #27231e;
        --color-base-100: #1c1b16;
        --color-base-50: #11110d;
        --color-base-0: #000000;

        --color-elevation-2: var(--color-base-200);
        --color-elevation-1: var(--color-base-175);
        --color-elevation-0: var(--color-base-150);

        --color-shadow-0: var(--color-base-0);
        --color-shadow-1: var(--color-base-0);
        --color-shadow-2: var(--color-base-50);

        --color-critical-error: red;

        --texture-dots: url(/img/paper-dots-dark.webp);
        --texture-dots-blend: overlay;

        & .when-light-theme {
          display: none !important;
        }

        * {
          color-scheme: only dark;
        }

        color: var(--color-base-1000);
      }
    }
  }

  /* FONTS */

  html {
    font-family: "Noto Sans", "Noto Sans JP", sans-serif;
    font-variant-numeric: tabular-nums;
    line-height: 1;
    text-size-adjust: 100%;
  }

  .font-serif {
    font-family: "Noto Serif", "Noto Serif JP", serif;
    font-stretch: 100%;
    font-weight: 430;
    letter-spacing: -0.055em;
  }

  [lang] {
    .font-serif [lang="zh"] {
      font-family: "Noto Serif", "Noto Serif SC", serif;
    }

    [lang="zh"] {
      font-family: "Noto Sans", "Noto Sans SC", sans-serif;
      &.font-serif,
      .font-serif {
        font-family: "Noto Serif", "Noto Serif SC", serif;
      }
    }

    .font-serif [lang="ja"] {
      font-family: "Noto Serif", "Noto Serif JP", serif;
    }

    [lang="ja"] {
      font-family: "Noto Sans", "Noto Sans JP", sans-serif;
      &.font-serif,
      .font-serif {
        font-family: "Noto Serif", "Noto Serif JP", serif;
      }
    }
  }

  :root {
    --font-size-increase: (2px + min(0.4vw, 5px));

    --font-size-xs: 12px;
    --font-size-s: 14px;
    --font-size-m: 16px;
    --font-size-l: calc(16px + var(--font-size-increase) * 0.4);
    --font-size-xl: calc(16px + var(--font-size-increase) * 0.9);
    --font-size-2xl: calc(16px + var(--font-size-increase) * 1.6);
    --font-size-3xl: calc(16px + var(--font-size-increase) * 2.5);
    --font-size-4xl: calc(16px + var(--font-size-increase) * 3.5);
    --font-size-5xl: calc(16px + var(--font-size-increase) * 7.5);
  }

  html,
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: var(--font-size-m);
  }

  strong,
  b {
    font-weight: 700;
  }

  .font-xs {
    font-size: var(--font-size-xs);
    letter-spacing: -0.02em;
    font-stretch: 85%;
    font-weight: 500;

    &.font-serif {
      font-stretch: 74%;
    }
  }

  .font-s {
    font-size: var(--font-size-s);
    letter-spacing: -0.02em;
    font-stretch: 92%;
    font-weight: 450;

    &.font-serif {
      font-stretch: 84%;
    }
  }

  .font-m {
    font-size: var(--font-size-m);
    letter-spacing: -0.02em;
    font-stretch: 93%;
    font-weight: 450;

    &.font-serif {
      font-stretch: 85%;
    }
  }

  .font-l,
  .prose > h6 {
    font-size: var(--font-size-l);
    letter-spacing: -0.02em;
    font-stretch: 95%;
    font-weight: 600;

    &.font-serif {
      font-stretch: 87%;
    }
  }

  .font-xl,
  .prose > h5 {
    font-size: var(--font-size-xl);
    letter-spacing: -0.02em;
    font-stretch: 95%;
    font-weight: 700;

    &.font-serif {
      font-stretch: 87%;
    }
  }

  .font-2xl,
  .prose > h4 {
    font-size: var(--font-size-2xl);
    letter-spacing: -0.02em;
    font-stretch: 95%;
    font-weight: 750;

    &.font-serif {
      letter-spacing: -0.03em;
      font-stretch: 89%;
    }
  }

  .font-3xl,
  .prose > h3 {
    font-size: var(--font-size-3xl);
    letter-spacing: -0.025em;
    font-stretch: 95%;
    font-weight: 800;

    &.font-serif {
      letter-spacing: -0.03em;
      font-stretch: 87%;
    }
  }

  .font-4xl,
  .prose > h2 {
    font-size: var(--font-size-4xl);
    letter-spacing: -0.03em;
    font-stretch: 95%;
    font-weight: 900;

    &.font-serif {
      letter-spacing: -0.04em;
      font-stretch: 89%;
    }
  }

  .font-5xl,
  .prose > h1 {
    font-size: var(--font-size-5xl);
    letter-spacing: -0.03em;
    font-stretch: 95%;
    font-weight: 900;

    &.font-serif {
      letter-spacing: -0.04em;
      font-stretch: 89%;
    }
  }

  /* THEMING */

  a,
  button {
    &:focus-visible {
      outline: 3px solid var(--color-base-1000);
      outline-offset: unset;
    }
  }

  * {
    scrollbar-width: thin;
    scrollbar-color: var(--color-base-650) transparent;
    -webkit-tap-highlight-color: transparent;
  }

  *::selection {
    color: var(--color-elevation-0);
    background: var(--color-base-600);
  }

  @media screen {
    .high-contrast-text {
      text-shadow: 0 0 0.6em var(--color-elevation-0);
    }

    body {
      margin: clamp(12px, 3vmin, 24px) clamp(24px, 4vw, 64px);
    }
  }

  html {
    position: relative;
    min-height: 100vb;
    display: flex;

    @media screen {
      background-color: var(--color-base-150);
    }
  }

  body {
    flex: 1;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    background-color: transparent;
  }

  p {
    & a {
      transition-duration: 150ms;
      transition-property: text-decoration-color, color;

      color: var(--color-base-750);
      text-decoration: underline dotted 0.1em var(--color-base-650);

      border-radius: 9999px;

      &:hover,
      &:focus-visible {
        color: var(--color-base-850);
        text-decoration-color: var(--color-base-750);
      }

      &:focus-visible {
        outline: 3px solid var(--color-base-750);
        outline-offset: 2px;
      }

      &:active {
        color: var(--color-base-1000);
        text-decoration-color: var(--color-base-1000);
      }
    }
  }

  @media screen {
    .texture-dots {
      background-size: 10cm;
      background-attachment: local;
      background-image: var(--texture-dots);
      background-blend-mode: var(--texture-dots-blend);
      background-repeat: repeat;
    }
  }

  .pressable-icon {
    transition: 150ms color;
    cursor: pointer;
    border-radius: 9999px;

    &:hover,
    &:focus-visible {
      color: var(--color-base-700);
      outline-color: var(--color-base-700);
      outline-offset: 4px;
    }

    &:active {
      color: var(--color-base-550);
    }
  }

  .pressable-link {
    text-decoration: underline dotted 0.1em;
    text-decoration-color: transparent;

    transition-duration: 150ms;
    transition-property: text-decoration-color, color;

    border-radius: 9999px;

    &:hover {
      color: var(--color-base-750);
      text-decoration-color: var(--color-base-650);
    }

    &:focus-visible {
      color: var(--color-base-750);
      outline: 3px solid var(--color-base-750);
      outline-offset: 3px;
    }

    &:active {
      color: var(--color-base-650);
      text-decoration-color: var(--color-base-550);
    }
  }

  .pressable-label {
    color: inherit;
    text-decoration: none;
    flex-shrink: 0;
    display: flex;
    place-items: center;
    gap: 0.4em;
    padding: 0.7em 0.8em;
    border-radius: 9999px;
    cursor: pointer;

    transition: 150ms background-color;

    &:hover,
    &:focus-visible {
      background-color: var(--color-base-250);
    }

    &:active {
      background-color: var(--color-base-300);
    }
  }

  .pressable {
    --foreground-color: var(--color-base-650);
    color: var(--foreground-color);
    outline-color: var(--foreground-color);
    border: 2px solid var(--foreground-color);
    background-color: color-mix(in srgb, var(--color-elevation-0) 60%, transparent);

    @media (prefers-reduced-transparency) or (prefers-contrast: more) {
      background-color: var(--color-elevation-0);
    }

    @media print {
      background-color: var(--color-base-0);
    }

    transition-duration: 250ms;
    transition-property: padding-top, box-shadow, background-color, color, border-color;

    &:hover,
    &:focus-visible {
      --foreground-color: var(--color-base-1000);
      box-shadow: 0 2px 2px var(--color-shadow-2);
      background-color: var(--color-elevation-1);
    }

    &:active {
      transition-duration: 75ms;
      --foreground-color: var(--color-base-1000);
      background-color: var(--color-elevation-2);
      box-shadow: 0 6px 12px 2px var(--color-shadow-2);
    }
  }

  .hide-scrollbar {
    scrollbar-width: none;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  .prose {
    line-height: 1.75;
    max-width: 35rem;

    > *:first-child {
      margin-top: unset;
      padding-top: unset;
    }

    > *:last-child {
      margin-bottom: unset;
      padding-bottom: unset;
    }

    > p {
      margin-top: 1.25em;
      margin-bottom: 1.25em;

      > kbd {
        background-color: var(--color-shadow-2);
        padding: 0.15em 0.3em;
        border-radius: 0.3em;
      }
    }

    > h2,
    > h3,
    > h4,
    > h5,
    > h6 {
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1;
      scroll-margin: 1em;
    }

    > h2 + h3,
    > h3 + h4,
    > h4 + h5,
    > h5 + h6 {
      margin-top: -0.75em;
    }
  }

  @view-transition {
    navigation: auto;
  }

  @keyframes flashingRed {
    from {
      background-color: #ff000022;
    }

    to {
      background-color: #ff000033;
    }
  }

  .error-message {
    animation: flashingRed;
    animation-duration: 0.5s;
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }

  @media print {
    .when-no-print {
      display: none !important;
    }

    .when-dark-theme {
      display: none !important;
    }
  }
</style>

{/* ------------------------------------------- JS --------------------------------------------- */}

<script is:inline>
  Array.from(document.querySelectorAll(".when-no-js")).forEach((node) => node.remove());
</script>

<script is:inline>
  document.querySelectorAll("a").forEach((element) => {
    const href = element.getAttribute("href");
    if (!href || !href.startsWith("#")) return;
    const heading = document.getElementById(href.substring(1));
    if (!heading) return;

    element.addEventListener("click", (event) => {
      heading.scrollIntoView({ behavior: "smooth" });
      event.preventDefault();
    });
  });
</script>
