---
import Button from "components/Button.astro";
import {
  type EndpointCredit,
  type EndpointImage,
  type EndpointMediaThumbnail,
  type EndpointScanImage,
  type RichTextContent,
} from "src/shared/payload/payload-sdk";
import Credits from "./Credits.astro";
import DownloadButton from "./DownloadButton.astro";
import AppLayoutTitle from "./AppLayout/components/AppLayoutTitle.astro";
import type { ComponentProps } from "astro/types";
import AppLayoutDescription from "./AppLayout/components/AppLayoutDescription.astro";
import Attributes from "./Attributes.astro";
import { sizesToSrcset } from "src/utils/img";

interface Props {
  previousImageHref?: string | undefined;
  nextImageHref?: string | undefined;
  image: EndpointImage | EndpointScanImage | EndpointMediaThumbnail;
  pretitle?: string | undefined;
  title: string;
  subtitle?: string | undefined;
  description?: RichTextContent | undefined;
  attributes?: ComponentProps<typeof Attributes>["attributes"] | undefined;
  metaAttributes?: ComponentProps<typeof Attributes>["attributes"] | undefined;
  credits?: EndpointCredit[] | undefined;
  filename?: string | undefined;
}

const {
  nextImageHref,
  previousImageHref,
  image: { url, width, height, sizes },
  attributes = [],
  metaAttributes = [],
  credits = [],
  description,
  pretitle,
  title,
  subtitle,
  filename,
} = Astro.props;

const smallTitle = !subtitle && !pretitle;

const hasNavigation = previousImageHref || nextImageHref;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<div id="container">
  <div id="image-viewer" class:list={{ "with-buttons": hasNavigation }}>
    {
      hasNavigation && (
        <a
          class:list={{ hidden: !previousImageHref }}
          href={previousImageHref}
          data-astro-history="replace">
          <Button icon="material-symbols:chevron-left" />
        </a>
      )
    }

    <a href={url} target="_blank">
      <img
        src={url}
        srcset={sizesToSrcset(sizes)}
        sizes={`(max-aspect-ratio: ${width / 0.9}/${height / 0.7}) 90vw, ${(width / height) * 70}vh`}
        width={width}
        height={height}
      />
    </a>

    {
      hasNavigation && (
        <a
          class:list={{ hidden: !nextImageHref }}
          href={nextImageHref}
          data-astro-history="replace">
          <Button icon="material-symbols:chevron-right" />
        </a>
      )
    }
  </div>

  <div
    id="info"
    class:list={{
      complex:
        attributes.length > 0 || metaAttributes.length > 0 || credits.length > 0 || description,
    }}>
    <div>
      {
        smallTitle ? (
          <h1>{title}</h1>
        ) : (
          <AppLayoutTitle pretitle={pretitle} title={title} subtitle={subtitle} />
        )
      }
      {description && <AppLayoutDescription description={description} />}
    </div>
    {attributes.length > 0 && <Attributes attributes={attributes} />}
    {credits.length > 0 && <Credits credits={credits} />}
    {metaAttributes.length > 0 && <Attributes attributes={metaAttributes} />}
    {filename && <DownloadButton href={url} filename={filename} />}
  </div>
</div>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  #container {
    display: flex;
    flex-direction: column;
    gap: 3em;
    align-items: center;
    margin-top: 3em;

    & > #image-viewer {
      &.with-buttons {
        display: grid;
        grid-template-columns: auto 1fr auto;
        gap: 1em;
        place-items: center;
      }

      & > a.hidden {
        visibility: hidden;
      }

      img {
        max-height: 70vh;
        max-width: 100%;
        height: auto;
        width: auto;
      }
    }

    & > #info {
      display: flex;
      flex-direction: column;
      gap: 4em;
      align-items: start;

      @media (max-width: 35rem) {
        gap: 6em;
      }

      &:not(.complex) {
        align-items: center;
        gap: 2em;
      }
    }
  }

  h1 {
    max-width: 35em;
    overflow-wrap: anywhere;
  }
</style>
