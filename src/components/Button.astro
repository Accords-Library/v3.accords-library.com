---
import { Icon } from "astro-icon/components";

interface Props {
  title?: string;
  icon?: string | string[];
  class?: string;
  ariaLabel?: string;
}

const { title, icon, class: className, ariaLabel } = Astro.props;

const icons =
  icon === undefined ? [] : typeof icon === "string" ? [icon] : icon;
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<button
  class:list={[{ "with-title": !!title }, className]}
  aria-label={ariaLabel}
>
  {icons.map((cIcon) => <Icon name={cIcon} height={24} width={24} />)}
  {title}
</button>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  button {
    --foreground-color: var(--color-base-650);
    color: var(--foreground-color);
    border: 1px solid var(--foreground-color);
    background-color: var(--color-elevation-0);
    border-radius: 9999px;
    padding-left: 1em;
    padding-right: 1em;
    height: 38px;

    display: flex;
    place-items: center;
    place-content: center;
    gap: 10px;

    font-weight: 700;
    font-size: 1em;
    cursor: pointer;

    transition-duration: 250ms;
    transition-property: translate, box-shadow, background-color, color,
      border-color;
    transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);

    &:hover {
      --foreground-color: var(--color-base-1000);
      box-shadow: inset 0 1px 1px 0px var(--color-shadow-2);
    }

    &:active {
      transition-duration: 75ms;
      --foreground-color: var(--color-base-1000);
      background-color: var(--color-elevation-2);
      box-shadow: inset 0 1px 1px 1px var(--color-shadow-2);

      & > div {
        translate: 0 1px;
      }
    }

    &.with-title {
      & > div > svg {
        width: 18px;
        height: 18px;
      }
    }
  }
</style>
