---
import { Icon } from "astro-icon/components";
import { getI18n } from "src/i18n/i18n";
import type { EndpointTagsGroup } from "src/shared/payload/payload-sdk";

interface Props {
  tagGroups: (EndpointTagsGroup | { title: string; icon: string; values: string[] })[];
}

const { tagGroups } = Astro.props;
const { getLocalizedMatch } = await getI18n(Astro.locals.currentLocale);

const groups = tagGroups.map((group) => {
  if ("title" in group) {
    return group;
  } else {
    return {
      title: getLocalizedMatch(group.translations).name,
      icon: group.icon,
      values: group.tags.map(({ translations }) => getLocalizedMatch(translations).name),
    };
  }
});
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<div id="tags">
  {
    groups.map(({ icon, title, values }) => (
      <div>
        <Icon name={icon} />
        <p>{title}</p>
        <div>{values.join(", ")}</div>
      </div>
    ))
  }
</div>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  #tags {
    display: flex;
    gap: 0.5em 1.5em;
    flex-wrap: wrap;

    & > div {
      font-weight: 400;
      font-size: 80%;
      display: flex;
      gap: 0.5em;

      & > p {
        color: var(--color-base-750);
      }

      & > svg {
        color: var(--color-base-750);
        flex-shrink: 0;
      }
    }
  }
</style>
