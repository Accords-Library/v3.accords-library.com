---
interface Props {
  class?: string | undefined;
  trigger?: string | undefined;
}

const { class: className, trigger = "mouseenter focus" } = Astro.props;
---

<tippy-tooltip class={className} data-tippy-trigger={trigger}>
  <template><slot name="tooltip-content" /></template>
  <slot />
</tippy-tooltip>

<script>
  import tippy from "tippy.js";
  import htmx from "htmx.org";

  class TippyTooltip extends HTMLElement {
    constructor() {
      super();

      tippy(this, {
        allowHTML: true,
        content: (ref) =>
          ref.querySelector(":scope > template")?.innerHTML ?? "",
        interactive: true,
        onMount: (instance) => {
          htmx.process(instance.popper);
        },
      });
    }
  }

  customElements.define("tippy-tooltip", TippyTooltip);
</script>
