---
import type { EndpointTagsGroup } from "src/shared/payload/payload-sdk";
import { getI18n } from "src/i18n/i18n";
import Metadata from "./Metadata.astro";
import type { ComponentProps } from "astro/types";

interface Props {
  tagGroups: (EndpointTagsGroup | ComponentProps<typeof Metadata>)[];
}

const { tagGroups } = Astro.props;
const { getLocalizedMatch, getLocalizedUrl } = await getI18n(Astro.locals.currentLocale);

const groups = tagGroups.map((group) => {
  if ("title" in group) {
    return group;
  } else {
    return {
      title: getLocalizedMatch(group.translations).name,
      icon: group.icon,
      values: group.tags.map(({ translations, page }) => ({
        name: getLocalizedMatch(translations).name,
        ...(page ? { href: getLocalizedUrl(`/pages/${page.slug}`) } : {}),
      })),
      withBorder: true,
    };
  }
});
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<div>
  {groups.map((group) => <Metadata {...group} />)}
  <slot />
</div>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  div {
    display: flex;
    flex-direction: column;
    gap: 2em;

    @media (max-width: 35rem) {
      gap: 3em;
    }
  }
</style>
