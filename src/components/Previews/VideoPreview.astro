---
import GenericPreview from "components/Previews/GenericPreview.astro";
import { getI18n } from "src/i18n/i18n";
import type { EndpointVideoPreview } from "src/shared/payload/payload-sdk";

interface Props {
  video: EndpointVideoPreview;
}

const { getLocalizedMatch, getLocalizedUrl, t, formatDuration } = await getI18n(
  Astro.locals.currentLocale
);

const {
  video: { id, translations, attributes, filename, thumbnail, duration },
} = Astro.props;

const { pretitle, title, subtitle, language } =
  translations.length > 0
    ? getLocalizedMatch(translations)
    : { pretitle: undefined, title: filename, subtitle: undefined, language: undefined };

const attributesWithMeta = [
  ...attributes,
  {
    title: t("global.media.attributes.duration"),
    icon: "material-symbols:hourglass-empty",
    values: [{ name: formatDuration(duration) }],
  },
];
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<GenericPreview
  pretitle={pretitle}
  title={title}
  subtitle={subtitle}
  lang={language}
  thumbnail={thumbnail}
  href={getLocalizedUrl(`/videos/${id}`)}
  attributes={attributesWithMeta}
  icon="material-symbols:smart-display"
  iconHoverLabel={t("global.collections.videos", { count: 1 })}
  smallTitle={title === filename}
/>
