---
import type { EndpointImage } from "src/shared/payload/payload-sdk";
import { sizesForGridLayout, sizesToSrcset } from "src/utils/img";

interface Props {
  img?: { light: EndpointImage; dark: EndpointImage } | undefined;
  name: string;
  href: string;
}

const { img, name, href } = Astro.props;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<a href={href} aria-label={name} class="pressable">
  {
    img ? (
      <>
        <img
          src={img.light.url}
          srcset={sizesToSrcset(img.light.sizes)}
          sizes={sizesForGridLayout(250, 1.15)}
          width={img.light.width}
          height={img.light.height}
          class="when-light-theme"
          alt={name}
          title={name}
          loading="lazy"
        />
        <img
          src={img.dark.url}
          srcset={sizesToSrcset(img.dark.sizes)}
          sizes={sizesForGridLayout(250, 1.15)}
          width={img.dark.width}
          height={img.dark.height}
          class="when-dark-theme"
          alt={name}
          title={name}
          loading="lazy"
        />
      </>
    ) : (
      <div>
        <p>{name}</p>
      </div>
    )
  }
</a>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  a {
    display: grid;
    place-items: center;

    border-radius: 12px;

    user-select: none;
    aspect-ratio: 16/9;
    width: 100%;
    box-sizing: border-box;

    & > img {
      object-fit: contain;
      height: 100%;
      width: 100%;
    }

    & > div {
      display: grid;
      place-content: center;
      height: 100%;
      width: 100%;
    }
  }
</style>
