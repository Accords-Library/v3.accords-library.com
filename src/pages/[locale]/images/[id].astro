---
import AppLayout from "components/AppLayout/AppLayout.astro";
import Lightbox from "components/Lightbox.astro";
import { getI18n } from "src/i18n/i18n";
import { payload } from "src/services";
import { formatInlineTitle, formatRichTextToString } from "src/utils/format";
import { fetchOr404 } from "src/utils/responses";
import { getFileIcon } from "src/utils/attributes";

const id = Astro.params.id!;
const response = await fetchOr404(() => payload.getImageByID(id));
if (response instanceof Response) {
  return response;
}
const image = response.data;
const {
  filename,
  translations,
  attributes,
  credits,
  createdAt,
  updatedAt,
  mimeType,
  filesize,
  width,
  height,
  backlinks,
} = image;

const { getLocalizedMatch, formatDate, t, formatFilesize, formatNumber } = await getI18n(
  Astro.locals.currentLocale
);

const { pretitle, title, subtitle, description, language } =
  translations.length > 0
    ? getLocalizedMatch(translations)
    : {
        pretitle: undefined,
        title: filename,
        subtitle: undefined,
        description: undefined,
        language: undefined,
      };

const metaAttributes = [
  ...(filename && title !== filename
    ? [
        {
          title: t("global.media.attributes.filename"),
          icon: getFileIcon(mimeType),
          values: [{ name: filename }],
          withBorder: false,
        },
      ]
    : []),
  {
    title: t("global.media.attributes.resolution"),
    icon: "material-symbols:photo-size-select-large",
    values: [{ name: `${formatNumber(width)} x ${formatNumber(height)}` }],
    withBorder: false,
  },
  {
    title: t("global.media.attributes.filesize"),
    icon: "material-symbols:hard-drive",
    values: [{ name: formatFilesize(filesize) }],
    withBorder: false,
  },
  {
    title: t("global.media.attributes.createdAt"),
    icon: "material-symbols:calendar-add-on",
    values: [{ name: formatDate(new Date(createdAt)) }],
    withBorder: false,
  },
  {
    title: t("global.media.attributes.updatedAt"),
    icon: "material-symbols:edit-calendar",
    values: [{ name: formatDate(new Date(updatedAt)) }],
    withBorder: false,
  },
];
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<AppLayout
  backlinks={backlinks}
  openGraph={{
    title: formatInlineTitle({ pretitle, title, subtitle }),
    description: description && formatRichTextToString(description),
    thumbnail: image,
  }}>
  <Lightbox
    image={image}
    pretitle={pretitle}
    title={title}
    subtitle={subtitle}
    description={description}
    lang={language}
    filename={filename}
    attributes={attributes}
    metaAttributes={metaAttributes}
    credits={credits}
    smallTitle={title === filename}
  />
</AppLayout>
