---
import AppLayout from "components/AppLayout/AppLayout.astro";
import { payload } from "src/shared/payload/payload-sdk";
import { getI18n } from "translations/translations";
import RichText from "components/RichText/RichText.astro";
import FoldersSection from "./_components/FoldersSection.astro";

const { slug } = Astro.params;
const { getLocalizedMatch } = await getI18n(Astro.locals.currentLocale);

if (!slug) {
  return Astro.redirect("/en/404");
}

const folder = await payload.getFolder(slug);
const meta = getLocalizedMatch(folder.translations, { name: slug });

// TODO: handle folder not found
// TODO: handle rich text description
// TODO: handle light and dark illustration for applayout
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<AppLayout title={meta.name}>

  {
    meta.description && (
      <div slot="header-description">
        <RichText content={JSON.parse(meta.description)} />
      </div>
    )
  }

  {
    folder.sections.type === "single" ? (
      <FoldersSection folders={folder.sections.subfolders} />
    ) : (
      <div id="sections">
        {folder.sections.sections.map(({ subfolders, translations }) => (
          <FoldersSection
            folders={subfolders}
            title={
              getLocalizedMatch<{
                language: string;
                name: string | undefined;
              }>(translations, { name: undefined }).name
            }
          />
        ))}
      </div>
    )
  }
</AppLayout>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  #sections {
    display: grid;
    gap: 2.5em;
  }
</style>
