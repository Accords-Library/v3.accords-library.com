---
import type {
  EndpointImage,
  EndpointMediaThumbnail,
  EndpointScanImage,
} from "src/shared/payload/payload-sdk";
import { sizesToSrcset } from "src/utils/img";

interface Props {
  image: EndpointImage | EndpointScanImage | EndpointMediaThumbnail;
  title: string;
  subtitle: string;
  href: string;
  class?: string | undefined;
}

const {
  image: { url, width, height, sizes },
  title,
  subtitle,
  href,
  ...otherProps
} = Astro.props;
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<a href={href} {...otherProps.class ? otherProps : {}}>
  <img
    src={url}
    srcset={sizesToSrcset(sizes)}
    sizes=`
      (max-width: 400px) 90vw,
      (max-width: 850px) 50vw,
      380px`
    width={width}
    height={height}
  />

  <div>
    <p id="title" class="font-2xl">{title}</p>
    <p>{subtitle}</p>
  </div>
</a>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  a {
    width: 100%;
    aspect-ratio: 1 / 1;
    display: grid;
    place-items: center;
    grid-template-areas: "center";
    border-radius: 12px;

    transition: 100ms scale;

    &:hover,
    &:focus-visible {
      scale: 105%;
    }

    & > div {
      grid-area: center;
      padding: 1em;
      border-radius: 1em;
      text-align: center;
      background-color: color-mix(in srgb, var(--color-elevation-0) 70%, transparent);
      backdrop-filter: blur(8px);

      & > p:has(+ p) {
        margin-bottom: 0.3em;
      }
    }

    & > img {
      grid-area: center;
      height: 100%;
      object-fit: cover;
      box-shadow: 0 5px 20px -10px var(--color-shadow-0);
      border-radius: 12px;
    }
  }
</style>
