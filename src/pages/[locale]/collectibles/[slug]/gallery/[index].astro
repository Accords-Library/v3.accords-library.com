---
import AppLayout from "components/AppLayout/AppLayout.astro";
import Lightbox from "components/Lightbox.astro";
import { getI18n } from "src/i18n/i18n";
import { payload } from "src/utils/payload";
import { formatInlineTitle, formatRichTextToString } from "src/utils/format";
import { fetchOr404 } from "src/utils/responses";

const slug = Astro.params.slug!;
const index = Astro.params.index!;
const { getLocalizedUrl, getLocalizedMatch, t, formatDate } = await getI18n(
  Astro.locals.currentLocale
);

const galleryImage = await fetchOr404(() => payload.getCollectibleGalleryImage(slug, index));
if (galleryImage instanceof Response) {
  return galleryImage;
}

const { parentPages, previousIndex, nextIndex, image } = galleryImage;
const { filename, translations, createdAt, updatedAt, credits, attributes } = image;

const { pretitle, title, subtitle, description } =
  translations.length > 0
    ? getLocalizedMatch(translations)
    : { pretitle: undefined, title: filename, subtitle: undefined, description: undefined };

const metaAttributes = [
  ...(filename && title !== filename
    ? [
        {
          title: t("global.media.attributes.filename"),
          icon: "material-symbols:unknown-document",
          values: [{ name: filename }],
          withBorder: false,
        },
      ]
    : []),
  {
    title: t("global.media.attributes.createdAt"),
    icon: "material-symbols:calendar-add-on",
    values: [{ name: formatDate(new Date(createdAt)) }],
    withBorder: false,
  },
  {
    title: t("global.media.attributes.updatedAt"),
    icon: "material-symbols:edit-calendar",
    values: [{ name: formatDate(new Date(updatedAt)) }],
    withBorder: false,
  },
];
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<AppLayout
  openGraph={{
    title: formatInlineTitle({ pretitle, title, subtitle }),
    description: description && formatRichTextToString(description),
    thumbnail: image,
  }}
  parentPages={parentPages}>
  <Lightbox
    image={image}
    pretitle={pretitle}
    title={title}
    subtitle={subtitle}
    previousImageHref={previousIndex
      ? getLocalizedUrl(`/collectibles/${slug}/gallery/${previousIndex}`)
      : undefined}
    nextImageHref={nextIndex
      ? getLocalizedUrl(`/collectibles/${slug}/gallery/${nextIndex}`)
      : undefined}
    description={description}
    filename={filename}
    attributes={attributes}
    metaAttributes={metaAttributes}
    credits={credits}
    smallTitle={title === filename}
  />
</AppLayout>
