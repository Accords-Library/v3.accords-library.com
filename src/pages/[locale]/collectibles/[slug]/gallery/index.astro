---
import AppLayout from "components/AppLayout/AppLayout.astro";
import AppLayoutTitle from "components/AppLayout/components/AppLayoutTitle.astro";
import { getI18n } from "src/i18n/i18n";
import { payload } from "src/services";
import { formatInlineTitle, formatRichTextToString } from "src/utils/format";
import { fetchOr404 } from "src/utils/responses";
import { sizesToSrcset } from "src/utils/img";
import ReturnToParentCard from "components/AppLayout/components/Topbar/components/ReturnToParentCard.astro";

const slug = Astro.params.slug!;
const { getLocalizedMatch, getLocalizedUrl, t } = await getI18n(Astro.locals.currentLocale);

const response = await fetchOr404(() => payload.getCollectibleGallery(slug));
if (response instanceof Response) {
  return response;
}
const { translations, images, thumbnail, backlinks } = response.data;

const translation = getLocalizedMatch(translations);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

<AppLayout
  openGraph={{
    title: `${formatInlineTitle(translation)} (${t("collectibles.gallery.title")})`,
    description: translation.description && formatRichTextToString(translation.description),
    thumbnail,
  }}
  class="app">
  <AppLayoutTitle title={t("collectibles.gallery.title")} />
  {backlinks[0] && <ReturnToParentCard parent={backlinks[0]} />}

  <div>
    {
      images.map(({ url, width, height, sizes }, index) => (
        <a
          href={getLocalizedUrl(`/collectibles/${slug}/gallery/${index}`)}
          style={`aspect-ratio: ${width}/${height};`}>
          <img
            src={url}
            srcset={sizesToSrcset(sizes)}
            sizes={`
              (max-width: ${(width / height) * 320}px) 90vw,
              ${(width / height) * 320}px`}
            width={width}
            height={height}
            loading="lazy"
          />
        </a>
      ))
    }
  </div>
</AppLayout>

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  .app {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  div {
    margin-top: 3em;
    display: flex;
    gap: 2em;
    flex-wrap: wrap;

    a {
      display: flex;
      flex-direction: column;
      gap: 1em;
      text-align: center;
      place-items: center;
      box-shadow: 0 5px 20px -10px var(--color-shadow-0);
      border-radius: 16px;
      overflow: hidden;

      transition: 100ms scale;

      &:hover,
      &:focus-visible {
        scale: 104%;
      }

      max-height: 320px;
    }
  }
</style>
