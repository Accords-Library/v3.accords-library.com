---
import { Icon } from "astro-icon/components";
import Tooltip from "components/Tooltip.astro";
import { getI18n } from "src/i18n/i18n";
import type { EndpointSource } from "src/shared/payload/payload-sdk";
import { formatInlineTitle } from "src/utils/format";

interface Props {
  sources: EndpointSource[];
}

const { sources } = Astro.props;

const { getLocalizedUrl, getLocalizedMatch, t } = await getI18n(Astro.locals.currentLocale);
---

<Tooltip trigger="click">
  <div id="tooltip-content" slot="tooltip-content">
    {
      sources.map((source) =>
        source.type === "url" ? (
          <a class="pressable-link" href={source.url} target={"_blank"} rel={"noopener noreferrer"}>
            {source.label}
          </a>
        ) : source.type === "collectible" ? (
          <a
            class="pressable-link"
            href={getLocalizedUrl(`/collectibles/${source.collectible.slug}`)}>
            {formatInlineTitle(getLocalizedMatch(source.collectible.translations))}
          </a>
        ) : (
          <a class="pressable-link" href={getLocalizedUrl(`/pages/${source.page.slug}`)}>
            {formatInlineTitle(getLocalizedMatch(source.page.translations))}
          </a>
        )
      )
    }
  </div>
  <div class="pressable-label">
    <Icon name="material-symbols:edit-note" />
    <p>
      {t("timeline.eventFooter.sources", { count: sources.length })}
    </p>
  </div>
</Tooltip>

<style>
  #tooltip-content {
    display: grid;
    gap: 0.5em;
    font-size: 1rem;
  }
</style>
