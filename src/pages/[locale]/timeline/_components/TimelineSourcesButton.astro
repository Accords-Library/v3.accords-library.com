---
import { Icon } from "astro-icon/components";
import SourceRow from "components/SourceRow.astro";
import Tooltip from "components/Tooltip.astro";
import { getI18n } from "src/i18n/i18n";
import type { EndpointSource } from "src/shared/payload/endpoint-types";

interface Props {
  sources: EndpointSource[];
}

const { sources } = Astro.props;

const { t } = await getI18n(Astro.locals.currentLocale);
---

{/* ------------------------------------------- HTML ------------------------------------------- */}

{
  sources.length === 0 ? (
    <div class="no-sources error-message">
      <Icon name="material-symbols:warning-outline" />
      <p class="font-s">{t("timeline.eventFooter.sources", { count: sources.length })}</p>
    </div>
  ) : (
    <Tooltip trigger="click">
      <div id="tooltip-content" slot="tooltip-content">
        {sources.map((source) => (
          <SourceRow source={source} />
        ))}
      </div>
      <button class="pressable-label">
        <Icon name="material-symbols:edit-note" />
        <p class="font-s">{t("timeline.eventFooter.sources", { count: sources.length })}</p>
      </button>
    </Tooltip>
  )
}

{/* ------------------------------------------- CSS -------------------------------------------- */}

<style>
  button {
    padding-block: 0.5em;
  }

  #tooltip-content {
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .no-sources {
    flex-shrink: 0;
    display: flex;
    place-items: center;
    gap: 0.4em;
    padding: 0.7em 0.8em;
    border-radius: 9999px;

    color: color-mix(in srgb, var(--color-base-1000) 60%, var(--color-critical-error));
  }
</style>
