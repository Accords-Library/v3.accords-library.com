---
import { getI18n } from "src/i18n/i18n";
import type { EndpointChronologyEvent } from "src/shared/payload/payload-sdk";
import TimelineEventPartial from "../../api/timeline/partial.astro";

interface Props {
  event: EndpointChronologyEvent;
  displayDate: boolean;
}

const { event, displayDate } = Astro.props;
const { formatTimelineDate, t } = await getI18n(Astro.locals.currentLocale);

const displayedDate =
  !event.date.month && !event.date.day
    ? t("timeline.year.during", { year: formatTimelineDate(event.date) })
    : formatTimelineDate(event.date);
---

<div class="event-container">
  {displayDate && <h3>{displayedDate}</h3>}

  <div>
    {
      event.events.map((_, index) => (
        <TimelineEventPartial
          event={event}
          index={index}
          id={event.id}
          lang={Astro.locals.currentLocale}
        />
      ))
    }
  </div>
</div>

<style>
  .event-container {
    &:has(h3) > div {
      border-left: 1px solid var(--color-base-600);
      padding-left: 1em;
      padding-block: 1em;
    }

    & > div {
      display: flex;
      flex-direction: column;
      gap: 2em;
    }

    & > h3 {
      padding-bottom: 0.3em;
      padding-inline: 0.2em;
      color: var(--color-base-700);
      border-bottom: 1px solid var(--color-base-600);
      width: fit-content;
    }
  }
</style>
