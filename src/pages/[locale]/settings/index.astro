---
import AppLayout from "components/AppLayout/AppLayout.astro";
import { getI18n } from "src/i18n/i18n";
import { cache } from "src/utils/cachedPayload";

const { currentLocale, currentTheme, currentCurrency } = Astro.locals;
const { t } = await getI18n(currentLocale);
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<AppLayout title={t("settings.title")}>
  <div id="main">
    <div class="section">
      <h2>{t("settings.language.title")}</h2>
      <p>{t("settings.language.description")}</p><br />
      {
        cache.locales.map(({ id }) => (
          <a
            class:list={{ current: currentLocale === id }}
            href={`?action-lang=${id}`}
            data-astro-prefetch="tap"
          >
            {id}
          </a>
        ))
      }
    </div>

    <div class="section">
      <h2>{t("settings.theme.title")}</h2>
      <p>{t("settings.theme.description")}</p><br />
      <a
        class:list={{ current: currentTheme === "dark" }}
        href="?action-theme=dark"
        data-astro-prefetch="tap"
      >
        {t("global.theme.dark")}
      </a>
      <a
        class:list={{ current: currentTheme === "auto" }}
        href="?action-theme=auto"
        data-astro-prefetch="tap"
      >
        {t("global.theme.auto")}
      </a>
      <a
        class:list={{ current: currentTheme === "light" }}
        href="?action-theme=light"
        data-astro-prefetch="tap"
      >
        {t("global.theme.light")}
      </a>
    </div>

    <div class="section">
      <h2>{t("settings.theme.title")}</h2>
      <p>{t("settings.theme.description")}</p><br />
      {
        cache.currencies.map((id) => (
          <a
            class:list={{ current: currentCurrency === id }}
            href={`?action-currency=${id}`}
            data-astro-prefetch="tap"
          >
            {id}
          </a>
        ))
      }
    </div>
  </div>
</AppLayout>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  .section {
    display: flex;
    flex-direction: column;
    gap: 0.5em;

    & > .current {
      color: var(--color-base-750);
      text-decoration: underline 0.08em var(--color-base-650);
    }
  }

  #main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 5em;
  }
</style>
